# Generated by Django 4.2.7 on 2023-11-12 23:09

from django.conf import settings
import django.contrib.auth.models
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=64, unique=True)),
                ('first_name', models.CharField(max_length=64)),
                ('last_name', models.CharField(max_length=64)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.CharField(max_length=128)),
                ('age', models.PositiveIntegerField(null=True)),
                ('birthday_day', models.PositiveIntegerField(null=True)),
                ('birthday_month', models.PositiveIntegerField(null=True)),
                ('birthday_year', models.PositiveIntegerField(null=True)),
                ('country', models.CharField(max_length=64, null=True)),
                ('current_country', models.CharField(max_length=64, null=True)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pictures/')),
                ('stripe_customer_id', models.CharField(blank=True, max_length=255, null=True)),
                ('role', models.CharField(choices=[('ADMIN', 'Admin'), ('USER', 'User'), ('COACH', 'Coach')], default='USER', max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='DiamondConversion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dollarToDiamond', models.PositiveIntegerField(default=5)),
            ],
        ),
        migrations.CreateModel(
            name='PromotionRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Questions', models.JSONField(default=list)),
                ('working_days_hours', models.JSONField(default=list)),
                ('username', models.CharField(max_length=255, unique=True)),
                ('documents', models.FileField(upload_to='promotion_requests/documents/<django.db.models.fields.CharField>/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Voice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Coach',
            fields=[
                ('users_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('bio', models.TextField(default='')),
                ('profession', models.TextField(default='')),
                ('created_assessments', models.IntegerField(default=0)),
                ('approved_assessments', models.JSONField(default=dict)),
                ('requested_sessions', models.JSONField(default=dict)),
                ('support_groups_created', models.JSONField(default=dict)),
                ('avg_session_rating', models.FloatField(default=0)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('users.users',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('users_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('diamonds', models.PositiveIntegerField(default=1000)),
                ('XP', models.PositiveIntegerField(default=0)),
                ('level', models.PositiveIntegerField(default=0)),
                ('Overall_Score', models.PositiveIntegerField(default=0)),
                ('Total_Assessments', models.PositiveIntegerField(default=0)),
                ('Total_Live_Sessions', models.PositiveIntegerField(default=0)),
                ('Total_Joined_Meditations', models.PositiveIntegerField(default=0)),
                ('Total_Journal_Entries', models.PositiveIntegerField(default=0)),
                ('Total_Goals_Set', models.PositiveIntegerField(default=0)),
                ('FavouriteCoachesIds', models.JSONField(default=list)),
                ('annonymous_username', models.CharField(max_length=64, null=True)),
                ('diary_streak', models.PositiveIntegerField(default=0)),
                ('voices', models.ManyToManyField(to='users.voice')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('users.users',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
